name: Deploy Todo App

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  HUMANITEC_ORG: unveiled-lunchroom-defame-ki2k
  PROJECT_ID: fresh-todo-app-project
  ENVIRONMENT_ID: dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Install Humanitec CLI
      run: |
        curl -L -o hctl_linux_amd64.tar.gz https://github.com/humanitec/hctl/releases/download/v1.41.0/hctl_1.41.0_linux_amd64.tar.gz
        tar -xzf hctl_linux_amd64.tar.gz
        sudo install -o root -g root -m 0755 hctl /usr/local/bin/hctl
        hctl --version

    - name: Setup Humanitec Infrastructure
      env:
        HUMANITEC_AUTH_TOKEN: ${{ secrets.HUMANITEC_TOKEN }}
      run: |
        echo "Setting up Humanitec infrastructure..."
        
        # Create project if it doesn't exist
        hctl create project $PROJECT_ID || echo "Project may already exist"
        
        # Create environment if it doesn't exist  
        hctl create environment $PROJECT_ID $ENVIRONMENT_ID --set env_type_id=humanitec-11wcie-development || echo "Environment may already exist"

    - name: Deploy to Humanitec
      env:
        HUMANITEC_AUTH_TOKEN: ${{ secrets.HUMANITEC_TOKEN }}
      run: |
        echo "Deploying fresh todo app..."
        echo "Organization: $HUMANITEC_ORG"
        echo "Project: $PROJECT_ID"
        echo "Environment: $ENVIRONMENT_ID"
        
        # Deploy and capture outputs
        hctl deploy $PROJECT_ID $ENVIRONMENT_ID deployment.yaml --no-prompt --runner-logs-level debug --output - > deployment_outputs.json
        
        # Try to extract load balancer URL from outputs
        if [ -s deployment_outputs.json ]; then
          echo "=== Deployment Outputs ==="
          cat deployment_outputs.json | jq '.' || cat deployment_outputs.json
          
          # Look for load balancer URL in outputs
          LOADBALANCER_URL=$(cat deployment_outputs.json | jq -r '.shared."vm-fleet".loadbalancer_ip // .shared."vm-fleet".outputs.loadbalancer_ip // empty' 2>/dev/null || echo "")
          
          if [ -n "$LOADBALANCER_URL" ] && [ "$LOADBALANCER_URL" != "null" ]; then
            echo ""
            echo "üöÄ TODO APP DEPLOYED SUCCESSFULLY!"
            echo "üì± Access your app at: http://$LOADBALANCER_URL"
            echo "üîó Load Balancer URL: $LOADBALANCER_URL"
            echo ""
          else
            echo "‚ö†Ô∏è  Deployment succeeded but load balancer URL not found in outputs"
          fi
        else
          echo "‚ö†Ô∏è  No deployment outputs captured"
        fi